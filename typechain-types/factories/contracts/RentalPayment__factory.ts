/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  RentalPayment,
  RentalPaymentInterface,
} from "../../contracts/RentalPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentDate",
        type: "uint256",
      },
    ],
    name: "RentPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "landlord",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "propertyDetails",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
    ],
    name: "RentalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "rentalId",
        type: "uint256",
      },
    ],
    name: "RentalTerminated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tenant",
        type: "address",
      },
      {
        internalType: "string",
        name: "_propertyDetails",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_monthlyRent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endDate",
        type: "uint256",
      },
    ],
    name: "createRental",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentalId",
        type: "uint256",
      },
    ],
    name: "getRental",
    outputs: [
      {
        internalType: "address",
        name: "landlord",
        type: "address",
      },
      {
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        internalType: "string",
        name: "propertyDetails",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextPaymentDue",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentalId",
        type: "uint256",
      },
    ],
    name: "payRent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rentalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentals",
    outputs: [
      {
        internalType: "address",
        name: "landlord",
        type: "address",
      },
      {
        internalType: "address",
        name: "tenant",
        type: "address",
      },
      {
        internalType: "string",
        name: "propertyDetails",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "monthlyRent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextPaymentDue",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentalId",
        type: "uint256",
      },
    ],
    name: "terminateRental",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001c4f38038062001c4f833981810160405281019062000037919062000232565b336001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b55760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000ac919062000275565b60405180910390fd5b620000c6816200010260201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000292565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fa82620001cd565b9050919050565b6200020c81620001ed565b81146200021857600080fd5b50565b6000815190506200022c8162000201565b92915050565b6000602082840312156200024b576200024a620001c8565b5b60006200025b848285016200021b565b91505092915050565b6200026f81620001ed565b82525050565b60006020820190506200028c600083018462000264565b92915050565b60805161199a620002b56000396000818161022a0152610872015261199a6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806383d255bc1161007157806383d255bc1461015b5780638da5cb5b14610179578063af94a1d114610197578063d9e8843f146101ce578063f2fde38b146101ea578063f921741914610206576100a9565b80630a294ab6146100ae5780633e413bee146100cc57806361ec8dd7146100ea578063652bd29e1461011a578063715018a614610151575b600080fd5b6100b6610222565b6040516100c39190610dbf565b60405180910390f35b6100d4610228565b6040516100e19190610e59565b60405180910390f35b61010460048036038101906100ff9190610f4d565b61024c565b6040516101119190610dbf565b60405180910390f35b610134600480360381019061012f9190610fe7565b610515565b6040516101489897969594939291906110ce565b60405180910390f35b610159610654565b005b610163610668565b6040516101709190610dbf565b60405180910390f35b610181610672565b60405161018e9190611153565b60405180910390f35b6101b160048036038101906101ac9190610fe7565b61069c565b6040516101c59897969594939291906110ce565b60405180910390f35b6101e860048036038101906101e39190610fe7565b6107b9565b005b61020460048036038101906101ff919061116e565b6109f6565b005b610220600480360381019061021b9190610fe7565b610a7c565b005b60035481565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818310610290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610287906111e7565b60405180910390fd5b600084116102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca90611253565b60405180910390fd5b6000600360008154809291906102e8906112a2565b9190505590506040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff16815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001868152602001858152602001848152602001858152602001600115158152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610451919061151b565b50606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff0219169083151502179055509050508773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fd473cffcee3eaf349b05eb03eb9f694213e18ac6904a3c893020061433219c288a8a8a6040516104ff93929190611629565b60405180910390a4809150509695505050505050565b6000806060600080600080600080600260008b815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020183600301548460040154856005015486600601548760070160009054906101000a900460ff168580546105b890611348565b80601f01602080910402602001604051908101604052809291908181526020018280546105e490611348565b80156106315780601f1061060657610100808354040283529160200191610631565b820191906000526020600020905b81548152906001019060200180831161061457829003601f168201915b505050505095509850985098509850985098509850985050919395975091939597565b61065c610c01565b6106666000610c88565b565b6000600354905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461070b90611348565b80601f016020809104026020016040519081016040528092919081815260200182805461073790611348565b80156107845780601f1061075957610100808354040283529160200191610784565b820191906000526020600020905b81548152906001019060200180831161076757829003601f168201915b5050505050908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b6107c1610d4e565b60006002600083815260200190815260200160002090508060070160009054906101000a900460ff16610829576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610820906116a7565b60405180910390fd5b8060060154421015610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611713565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd338360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600301546040518463ffffffff1660e01b81526004016108f593929190611733565b6020604051808303816000875af1158015610914573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109389190611796565b610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e9061180f565b60405180910390fd5b62278d0081600601600082825461098e919061182f565b925050819055503373ffffffffffffffffffffffffffffffffffffffff16827fe7b793c2d375aa5934e16873f97e647671990418e9fead32b65a4d41e8fb4d1d8360030154426040516109e2929190611863565b60405180910390a3506109f3610d94565b50565b6109fe610c01565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a705760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a679190611153565b60405180910390fd5b610a7981610c88565b50565b60006002600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b235750610af4610672565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610b62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b59906118d8565b60405180910390fd5b8060070160009054906101000a900460ff16610bb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610baa90611944565b60405180910390fd5b60008160070160006101000a81548160ff021916908315150217905550817fecddf1b4fdc1297684aa71a38e047726f2411ac8b4b4e705b9bf6e21d75ae13360405160405180910390a25050565b610c09610d9e565b73ffffffffffffffffffffffffffffffffffffffff16610c27610672565b73ffffffffffffffffffffffffffffffffffffffff1614610c8657610c4a610d9e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c7d9190611153565b60405180910390fd5b565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260005403610d8a576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600033905090565b6000819050919050565b610db981610da6565b82525050565b6000602082019050610dd46000830184610db0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e1f610e1a610e1584610dda565b610dfa565b610dda565b9050919050565b6000610e3182610e04565b9050919050565b6000610e4382610e26565b9050919050565b610e5381610e38565b82525050565b6000602082019050610e6e6000830184610e4a565b92915050565b600080fd5b600080fd5b6000610e8982610dda565b9050919050565b610e9981610e7e565b8114610ea457600080fd5b50565b600081359050610eb681610e90565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610ee157610ee0610ebc565b5b8235905067ffffffffffffffff811115610efe57610efd610ec1565b5b602083019150836001820283011115610f1a57610f19610ec6565b5b9250929050565b610f2a81610da6565b8114610f3557600080fd5b50565b600081359050610f4781610f21565b92915050565b60008060008060008060a08789031215610f6a57610f69610e74565b5b6000610f7889828a01610ea7565b965050602087013567ffffffffffffffff811115610f9957610f98610e79565b5b610fa589828a01610ecb565b95509550506040610fb889828a01610f38565b9350506060610fc989828a01610f38565b9250506080610fda89828a01610f38565b9150509295509295509295565b600060208284031215610ffd57610ffc610e74565b5b600061100b84828501610f38565b91505092915050565b61101d81610e7e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561105d578082015181840152602081019050611042565b60008484015250505050565b6000601f19601f8301169050919050565b600061108582611023565b61108f818561102e565b935061109f81856020860161103f565b6110a881611069565b840191505092915050565b60008115159050919050565b6110c8816110b3565b82525050565b6000610100820190506110e4600083018b611014565b6110f1602083018a611014565b8181036040830152611103818961107a565b90506111126060830188610db0565b61111f6080830187610db0565b61112c60a0830186610db0565b61113960c0830185610db0565b61114660e08301846110bf565b9998505050505050505050565b60006020820190506111686000830184611014565b92915050565b60006020828403121561118457611183610e74565b5b600061119284828501610ea7565b91505092915050565b7f496e76616c69642072656e74616c20706572696f640000000000000000000000600082015250565b60006111d160158361102e565b91506111dc8261119b565b602082019050919050565b60006020820190508181036000830152611200816111c4565b9050919050565b7f496e76616c69642072656e7420616d6f756e7400000000000000000000000000600082015250565b600061123d60138361102e565b915061124882611207565b602082019050919050565b6000602082019050818103600083015261126c81611230565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ad82610da6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112df576112de611273565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136057607f821691505b60208210810361137357611372611319565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113db7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261139e565b6113e5868361139e565b95508019841693508086168417925050509392505050565b600061141861141361140e84610da6565b610dfa565b610da6565b9050919050565b6000819050919050565b611432836113fd565b61144661143e8261141f565b8484546113ab565b825550505050565b600090565b61145b61144e565b611466818484611429565b505050565b5b8181101561148a5761147f600082611453565b60018101905061146c565b5050565b601f8211156114cf576114a081611379565b6114a98461138e565b810160208510156114b8578190505b6114cc6114c48561138e565b83018261146b565b50505b505050565b600082821c905092915050565b60006114f2600019846008026114d4565b1980831691505092915050565b600061150b83836114e1565b9150826002028217905092915050565b61152482611023565b67ffffffffffffffff81111561153d5761153c6112ea565b5b6115478254611348565b61155282828561148e565b600060209050601f8311600181146115855760008415611573578287015190505b61157d85826114ff565b8655506115e5565b601f19841661159386611379565b60005b828110156115bb57848901518255600182019150602085019450602081019050611596565b868310156115d857848901516115d4601f8916826114e1565b8355505b6001600288020188555050505b505050505050565b82818337600083830152505050565b6000611608838561102e565b93506116158385846115ed565b61161e83611069565b840190509392505050565b600060408201905081810360008301526116448185876115fc565b90506116536020830184610db0565b949350505050565b7f52656e74616c2061677265656d656e74206e6f74206163746976650000000000600082015250565b6000611691601b8361102e565b915061169c8261165b565b602082019050919050565b600060208201905081810360008301526116c081611684565b9050919050565b7f52656e74206e6f74206475652079657400000000000000000000000000000000600082015250565b60006116fd60108361102e565b9150611708826116c7565b602082019050919050565b6000602082019050818103600083015261172c816116f0565b9050919050565b60006060820190506117486000830186611014565b6117556020830185611014565b6117626040830184610db0565b949350505050565b611773816110b3565b811461177e57600080fd5b50565b6000815190506117908161176a565b92915050565b6000602082840312156117ac576117ab610e74565b5b60006117ba84828501611781565b91505092915050565b7f55534443207472616e73666572206661696c6564000000000000000000000000600082015250565b60006117f960148361102e565b9150611804826117c3565b602082019050919050565b60006020820190508181036000830152611828816117ec565b9050919050565b600061183a82610da6565b915061184583610da6565b925082820190508082111561185d5761185c611273565b5b92915050565b60006040820190506118786000830185610db0565b6118856020830184610db0565b9392505050565b7f556e617574686f72697a65640000000000000000000000000000000000000000600082015250565b60006118c2600c8361102e565b91506118cd8261188c565b602082019050919050565b600060208201905081810360008301526118f1816118b5565b9050919050565b7f52656e74616c20616c7265616479207465726d696e6174656400000000000000600082015250565b600061192e60198361102e565b9150611939826118f8565b602082019050919050565b6000602082019050818103600083015261195d81611921565b905091905056fea264697066735822122053968034558b1b1fbf682905f21a4633099d66c32cb6aac441029d110f734eb464736f6c63430008140033";

type RentalPaymentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalPaymentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalPayment__factory extends ContractFactory {
  constructor(...args: RentalPaymentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcAddress, overrides || {});
  }
  override deploy(
    _usdcAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcAddress, overrides || {}) as Promise<
      RentalPayment & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RentalPayment__factory {
    return super.connect(runner) as RentalPayment__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalPaymentInterface {
    return new Interface(_abi) as RentalPaymentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RentalPayment {
    return new Contract(address, _abi, runner) as unknown as RentalPayment;
  }
}
